buildscript {
    ext {
        // internal
        apiDocumentVersion = '0.0.1'
        applicationVersion = '0.0.1'

        //
        restdocsApiSpecVersion = '0.18.2'

        snippetsDir = file('build/generated-snippets')
    }

}
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'com.lams'
version = '0.0.1'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'


    // TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Util: Jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Util: LOG_BACK
    implementation("ch.qos.logback.contrib:logback-jackson:0.1.5")
    implementation("ch.qos.logback.contrib:logback-json-classic:0.1.5")

    // Util: GSON
    implementation 'com.google.code.gson:gson:2.9.0'

    // Util: LOMBOK
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Util: Apache
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    // Util: Swagger
    testImplementation 'io.rest-assured:rest-assured:5.3.1'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    testImplementation 'com.epages:restdocs-api-spec-restassured:0.18.2'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.2'
    swaggerUI 'org.webjars:swagger-ui:4.11.1'


    // DB: Querydsl
    implementation 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    // DB: REDIS
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.6.7'
    implementation 'org.springframework.session:spring-session-data-redis'

    // DB: GENERAL
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // DB: QueryDSL LOG
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

    // Util: Test
    implementation 'com.github.seunghoona:restdocsAdapter:0.8:plain'

}


openapi3 {
    setServer("http://localhost:8080")
    title = "LOST ARK MATCHING SYSTEM"
    description = "로스트아크 매칭 시스템 API 문서"
    version = "${apiDocumentVersion}"
    format = "yaml"
}

swaggerSources {
    sample {
        setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
    }
}

tasks.register('copySwaggerUI', Copy) {
    dependsOn 'generateSwaggerUISample'
    def generateSwaggerUISampleTask = tasks.named('generateSwaggerUISample', GenerateSwaggerUI).get()
    println "${generateSwaggerUISampleTask.outputDir}"
    from("${generateSwaggerUISampleTask.outputDir}")
    into("${project.buildDir}/resources/main/static/docs")
}

tasks.named("jar") {
    dependsOn 'copySwaggerUI'
}

tasks.named("copySwaggerUI") {
    dependsOn 'resolveMainClassName'
}


tasks.named('test') {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

clean {
    delete file('src/main/generated')
}

bootJar {
    dependsOn copySwaggerUI
}

compileTestJava {
    dependsOn copySwaggerUI
}